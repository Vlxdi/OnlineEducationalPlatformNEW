@model IEnumerable<OnlineEducationalPlatformNEW.Models.Courses>
@using Microsoft.AspNetCore.Identity
@using OnlineEducationalPlatformNEW.Models
@using Microsoft.AspNetCore.Identity.EntityFrameworkCore

@{
    ViewData["Title"] = "Index";
    var userManager = ViewData["UserManager"] as UserManager<ApplicationUser>;
}
<style>
    .custom-button {
        transition: 0.4s;
        font-size: 18px;
    }

    .custom-button:hover {
        background: white;
        color: #007BFF;
        transition: 0.3s;
    }

    .custom-btn-edit {
        background-color: #007bff;
        color: #fff;
    }

    .custom-btn-delete {
        background-color: #dc3545;
        color: #fff;
    }

    .custom-btn-details {
        background-color: #17a2b8;
        color: #fff;
    }
    .custom-btn-edit,
    .custom-btn-delete,
    .custom-btn-details {
        transition: transform 0.2s, color 0.3s, filter 0.3s;
        box-shadow: rgba(0, 0, 0, 0.24) 0px 2px 6px;
    }

    .custom-btn-edit:hover,
    .custom-btn-delete:hover,
    .custom-btn-details:hover {
        color: #fff;
        filter: brightness(80%);
    }

    .custom-btn-edit:active,
    .custom-btn-delete:active,
    .custom-btn-details:active {
        transform: perspective(170px) rotateX(35deg) translateY(2px);
    }
    .card{
        border-radius: 10px;
        box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
    }


    </style>
<h1 class="user-select-none text-center">Courses</h1>
@if (User.IsInRole("Teacher") || User.IsInRole("Admin"))
{
    <p>
        <button type="button" class="btn btn-lg btn-primary custom-button" onclick="location.href='@Url.Action("Create")'">Create New</button>              
    </p>
}
@if (User.IsInRole("Student") || User.IsInRole("Admin"))
{
    <div>
        <button onclick="location.href='@Url.Action("EnterCourseId")'" class="btn btn-primary custom-button">Enter Course Id</button>
    </div>
}

<table class="table user-select-none">
    <tbody>
        @foreach (var item in Model)
        {
            <div class="card mb-3">
                <div class="card-body">
                    <h5 class="card-title fw-bold">@Html.DisplayFor(modelItem => item.Name)</h5>
                    <p class="card-text">@Html.DisplayFor(modelItem => item.Description)</p>
                    <p class="card-text">
                        @if (item.IsPublic)
                        {
                            <span class="badge bg-success user-select-none">Public</span>
                        }
                        else
                        {
                            <span class="badge user-select-none" style="background: grey">Private</span>
                        }
                    </p>

                    @* <p class="card-text">
                        <strong>Owner:</strong>
                        @{
                            var owner = userManager.FindByIdAsync(item.OwnerId).Result;
                            if (owner != null)
                            {
                                @($"{owner.FirstName} {owner.LastName}")
                            }
                        }
                    </p>
 *@

                    <div class="d-flex justify-content-between">
                        <div></div> <!-- Empty div for spacing on the left -->

                        <div class="d-flex gap-2">
                            @if (User.IsInRole("Teacher") || User.IsInRole("Admin"))
                            {
                                <button type="button" class="btn custom-btn-edit" onclick="location.href='@Url.Action("Edit", new { id = item.Id })'">Edit</button>

                                <button type="button" class="btn custom-btn-delete" onclick="location.href='@Url.Action("Delete", new { id = item.Id })'">Delete</button>
                            }
                            <button type="button" class="btn custom-btn-details" onclick="location.href='@Url.Action("Details", new { id = item.Id })'">Details</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </tbody>
</table>
